@page
@model IndexModel
@using CowboyCafe.Data;
@{
    ViewData["Title"] = "Home";
    // throw new Exception("Test...");
    // uncomment and switch to website production to test error page ^^^^
}

<!-- Sets backgorund color -->
<style>
    body {
        background-color: antiquewhite;
    }
</style>


<!-- Welcome message (I didn't understand how it said to have welcome message and cowboy cafe headers, so I combined them) -->
<div class="text-center">
    <h1 class="welcome-m">Welcome to Cowboy Cafe!</h1>
    <p>
        We at Cowboy Cafe are proud to bring you authentic trail meals from the American West.
        Shake off the dust on your boots and sake your thirst with one of our old-fashioned hand-jerked sodas.
        Dip your Pan de Campo into a bowl of beans. Or conquer the the mighty Texas Triple Burger!
        You’ve had a hard ride - so take it easy with us.
    </p>
</div>

<p></p>

<!--Form to hold all search and filter funcionatlity-->
<form id="menu-database">
    <div id="search">
        <input type="text" name="SearchTerms" value="@Model.SearchTerms" />
        <input type="submit" value="Search" />
    </div>

    <div id="filters">
        <h5>Category:</h5>
        @foreach (String category in Menu.Categories)
        {
            <label>
                <input type="checkbox" name="Categories" value="@category" checked="@Model.Categories.Contains(category)" /> 
                @category
            </label>
        }

        <div>
            <h5>Calories:</h5>
            between
            <input type="number" name="caloriesMin" min="0" max="1000" step="10" placeholder="Min" value="@Model.CaloriesMin" />
            and
            <input type="number" name="caloriesMax" min="0" max="1000" step="10" placeholder="Max" value="@Model.CaloriesMax" />
        </div>


        <div>
            <h5>Price:</h5>
            between
            <input type="number" name="priceMin" min="0" max="1000" step=".1" placeholder="Min" value="@Model.PriceMin" />
            and
            <input type="number" name="priceMax" min="0" max="1000" step=".1" placeholder="Max" value="@Model.PriceMax" />
        </div>
    </div>

</form>
<p></p>


<div class="results">

    <!-- Lists each entree item by looping through the list found in the menu class -->
    <div id="entree-list">
        <h2 style="text-decoration:underline">Entrees</h2>
        @foreach (IOrderItem i in Model.items)
        {
            if (i is Entree e)
            {
                <div class="entree-item">
                    <h5 class="EntreeName">@i.ToString()</h5>
                    <ul style="list-style-type:square">
                        <li class="EntreePrice">Price: @i.Price.ToString("c")</li>
                        <li class="EntreeCalories">Calories: @i.Calories</li>
                    </ul>
                    <p>-------------------------</p>
                </div>
            }
        }
    </div>

    <!-- Lists each side item by looping through the list found in the menu class -->
    <div id="side-list">
        <h2 style="text-decoration:underline">Sides</h2>
        @foreach (IOrderItem i in Model.items)
        {
            if (i is Side s)
            {
                <div class="side-item">
                    <h5 class="SideName">@i.ToString()</h5>
                    <ul style="list-style-type:square">
                        <li class="SidePrice">Price: @i.Price.ToString("c")</li>
                        <li class="SideCalories">Calories: @i.Calories</li>
                    </ul>
                    <p>-------------------------</p>
                </div>
            }
        }
    </div>

    <!-- Lists each drinkitem by looping through the list found in the menu class -->
    <div id="drink-list">
        <h2 style="text-decoration:underline">Drinks</h2>
        @foreach (IOrderItem i in Model.items)
        {
            if (i is Drink d)
            {
                <div class="drink-item">
                    <h5 class="DrinkName">@i.ToString()</h5>
                    
                    <ul style="list-style-type:square">
                        <li class="DrinkPrice">Price: @i.Price.ToString("c")</li>
                        <li class="DrinkCalories">Calories: @i.Calories</li>
                    </ul>
                    @if (i is JerkedSoda j)
                    {
                        <div class="flavor-list">
                            <h7>
                                Flavors:
                                @SodaFlavor.BirchBeer.ToString(), @SodaFlavor.CreamSoda.ToString(), @SodaFlavor.Sarsparilla.ToString(), @SodaFlavor.RootBeer.ToString(), @SodaFlavor.OrangeSoda.ToString();
                            </h7>
                        </div>
                    }
                    <p>-------------------------</p>
                </div>
            }
        }
    </div>

</div>

